name: tencent_cos_sdk
description: "A comprehensive Flutter plugin for Tencent Cloud Object Storage (COS) that combines native SDK integration and pure Dart implementation for multi-platform support."
version: 0.0.1
homepage: https://github.com/difyz9/tencent_cos_sdk
repository: https://github.com/difyz9/tencent_cos_sdk
issue_tracker: https://github.com/difyz9/tencent_cos_sdk/issues

environment:
  sdk: ^3.7.2
  flutter: '>=3.3.0'

dependencies:
  flutter:
    sdk: flutter
  flutter_web_plugins:
    sdk: flutter
  web: ^1.0.0
  plugin_platform_interface: ^2.0.2
  dio: ^5.3.0
  xml: ^6.3.0
  crypto: ^3.0.6
  http: ^1.1.0

  path: ^1.8.3
  uuid: ^3.0.7
  mime: ^1.0.4
  intl: ^0.18.1

dev_dependencies:
  flutter_test:
    sdk: flutter
  flutter_lints: ^5.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:
  # This section identifies this Flutter project as a plugin project.
  # The 'pluginClass' specifies the class (in Java, Kotlin, Swift, Objective-C, etc.)
  # which should be registered in the plugin registry. This is required for
  # using method channels.
  # The Android 'package' specifies package in which the registered class is.
  # This is required for using method channels on Android.
  # The 'ffiPlugin' specifies that native code should be built and bundled.
  # This is required for using `dart:ffi`.
  # All these are used by the tooling to maintain consistency when
  # adding or updating assets for this project.
  plugin:
    platforms:
      android:
        package: com.tencent.tencent_cos_sdk
        pluginClass: TencentCosSdkPlugin
      ios:
        pluginClass: TencentCosSdkPlugin
      linux:
        pluginClass: TencentCosSdkPlugin
      macos:
        pluginClass: TencentCosSdkPlugin
      windows:
        pluginClass: TencentCosSdkPluginCApi
      web:
        pluginClass: TencentCosSdkWeb
        fileName: tencent_cos_sdk_web.dart

  # To add assets to your plugin package, add an assets section, like this:
  # assets:
  #   - images/a_dot_burr.jpeg
  #   - images/a_dot_ham.jpeg
  #
  # For details regarding assets in packages, see
  # https://flutter.dev/to/asset-from-package
  #
  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # To add custom fonts to your plugin package, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts in packages, see
  # https://flutter.dev/to/font-from-package
